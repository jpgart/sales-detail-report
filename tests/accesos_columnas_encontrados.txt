Accesos a columnas encontrados:

/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/config.py:6  ->  'ELC'  |  "ELC": ["ELC"],
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/config.py:7  ->  'AGL'  |  "AGL": ["AGL"],
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/config.py:8  ->  'ECO'  |  "ECO": ["ECO"],
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/config.py:10  ->  'VIDEXPORT'  |  "VIDEXPORT": ["VIDEXPORT"],
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/config.py:11  ->  'MDT'  |  "MDT": ["MDT"],
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/config.py:12  ->  'AGROVITA'  |  "Agrovita": ["AGROVITA"],
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/config.py:13  ->  'SAFCO PERU'  |  "SAFCO PERU": ["SAFCO PERU"],
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/config.py:14  ->  'BORQUEZ'  |  "BORQUEZ": ["BORQUEZ"]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:33  ->  'trxtype'  |  sales_per_lot = df[df['trxtype'] == 1].groupby(['lotid', 'Exporter_Clean'])['saleamt'].sum()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:33  ->  'saleamt'  |  sales_per_lot = df[df['trxtype'] == 1].groupby(['lotid', 'Exporter_Clean'])['saleamt'].sum()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:34  ->  'trxtype'  |  actual_deductions_filter = ((df['trxtype'] == 2) & (df['Is_Advance'] == False) & (df['chgamt'] > 0) &
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:34  ->  'Is_Advance'  |  actual_deductions_filter = ((df['trxtype'] == 2) & (df['Is_Advance'] == False) & (df['chgamt'] > 0) &
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:34  ->  'chgamt'  |  actual_deductions_filter = ((df['trxtype'] == 2) & (df['Is_Advance'] == False) & (df['chgamt'] > 0) &
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:35  ->  'Is_ProducePay_Commission'  |  ((df['Is_ProducePay_Commission'] == False) | (~df['chargedescr'].fillna('').astype(str).str.upper().str.contains("LIQUIDATION"))))
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:35  ->  'chargedescr'  |  ((df['Is_ProducePay_Commission'] == False) | (~df['chargedescr'].fillna('').astype(str).str.upper().str.contains("LIQUIDATION"))))
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:36  ->  'chgamt'  |  deductions_per_lot = df[actual_deductions_filter].groupby(['lotid', 'Exporter_Clean'])['chgamt'].sum()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:37  ->  'Is_Advance'  |  advances_per_lot = df[df['Is_Advance'] == True].groupby(['lotid', 'Exporter_Clean'])['chgamt'].sum()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:37  ->  'chgamt'  |  advances_per_lot = df[df['Is_Advance'] == True].groupby(['lotid', 'Exporter_Clean'])['chgamt'].sum()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:39  ->  'FOB_Price'  |  summary_df['FOB_Price'] = summary_df['Total_Sales'] - summary_df['Total_Deductions_Excl_Advances']
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:39  ->  'Total_Sales'  |  summary_df['FOB_Price'] = summary_df['Total_Sales'] - summary_df['Total_Deductions_Excl_Advances']
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:39  ->  'Total_Deductions_Excl_Advances'  |  summary_df['FOB_Price'] = summary_df['Total_Sales'] - summary_df['Total_Deductions_Excl_Advances']
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:40  ->  'Advance_Pct_of_FOB'  |  summary_df['Advance_Pct_of_FOB'] = np.where(summary_df['FOB_Price'] != 0, (summary_df['Total_Advances'] / summary_df['FOB_Price']) * 100, 0)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:40  ->  'FOB_Price'  |  summary_df['Advance_Pct_of_FOB'] = np.where(summary_df['FOB_Price'] != 0, (summary_df['Total_Advances'] / summary_df['FOB_Price']) * 100, 0)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:40  ->  'Total_Advances'  |  summary_df['Advance_Pct_of_FOB'] = np.where(summary_df['FOB_Price'] != 0, (summary_df['Total_Advances'] / summary_df['FOB_Price']) * 100, 0)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:40  ->  'FOB_Price'  |  summary_df['Advance_Pct_of_FOB'] = np.where(summary_df['FOB_Price'] != 0, (summary_df['Total_Advances'] / summary_df['FOB_Price']) * 100, 0)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:54  ->  'trxtype'  |  deductions_to_pivot = df[(df['trxtype'] == 2) & (df['Is_Advance'] == False) & (((df['Is_ProducePay_Commission'] == False) | (df['chgamt'] > 0)) & (df['chgamt'] > 0))].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:54  ->  'Is_Advance'  |  deductions_to_pivot = df[(df['trxtype'] == 2) & (df['Is_Advance'] == False) & (((df['Is_ProducePay_Commission'] == False) | (df['chgamt'] > 0)) & (df['chgamt'] > 0))].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:54  ->  'Is_ProducePay_Commission'  |  deductions_to_pivot = df[(df['trxtype'] == 2) & (df['Is_Advance'] == False) & (((df['Is_ProducePay_Commission'] == False) | (df['chgamt'] > 0)) & (df['chgamt'] > 0))].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:54  ->  'chgamt'  |  deductions_to_pivot = df[(df['trxtype'] == 2) & (df['Is_Advance'] == False) & (((df['Is_ProducePay_Commission'] == False) | (df['chgamt'] > 0)) & (df['chgamt'] > 0))].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:54  ->  'chgamt'  |  deductions_to_pivot = df[(df['trxtype'] == 2) & (df['Is_Advance'] == False) & (((df['Is_ProducePay_Commission'] == False) | (df['chgamt'] > 0)) & (df['chgamt'] > 0))].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:71  ->  'trxtype'  |  deductions_df = df[(df['trxtype'] == 2) & (df['chgamt'] > 0) & (df['Is_Advance'] == False) & (((df['Is_ProducePay_Commission'] == False) | (df['chgamt'] > 0)))].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:71  ->  'chgamt'  |  deductions_df = df[(df['trxtype'] == 2) & (df['chgamt'] > 0) & (df['Is_Advance'] == False) & (((df['Is_ProducePay_Commission'] == False) | (df['chgamt'] > 0)))].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:71  ->  'Is_Advance'  |  deductions_df = df[(df['trxtype'] == 2) & (df['chgamt'] > 0) & (df['Is_Advance'] == False) & (((df['Is_ProducePay_Commission'] == False) | (df['chgamt'] > 0)))].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:71  ->  'Is_ProducePay_Commission'  |  deductions_df = df[(df['trxtype'] == 2) & (df['chgamt'] > 0) & (df['Is_Advance'] == False) & (((df['Is_ProducePay_Commission'] == False) | (df['chgamt'] > 0)))].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:71  ->  'chgamt'  |  deductions_df = df[(df['trxtype'] == 2) & (df['chgamt'] > 0) & (df['Is_Advance'] == False) & (((df['Is_ProducePay_Commission'] == False) | (df['chgamt'] > 0)))].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:74  ->  'trxtype'  |  lot_cases_sold = df[df['trxtype'] == 1].groupby('lotid')['invcicqnt'].sum().reset_index(name='Total_Cases_Sold_Lot')
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:74  ->  'invcicqnt'  |  lot_cases_sold = df[df['trxtype'] == 1].groupby('lotid')['invcicqnt'].sum().reset_index(name='Total_Cases_Sold_Lot')
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:77  ->  'Total_Cases_Sold_Lot'  |  deductions_df['Total_Cases_Sold_Lot'] = deductions_df['Total_Cases_Sold_Lot'].fillna(0)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:77  ->  'Total_Cases_Sold_Lot'  |  deductions_df['Total_Cases_Sold_Lot'] = deductions_df['Total_Cases_Sold_Lot'].fillna(0)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:79  ->  'Total_Cases_Sold_Lot'  |  deductions_df['Total_Cases_Sold_Lot'] = 0
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:80  ->  'chgamt'  |  lot_deductions_summary = deductions_df.groupby(['lotid', 'Exporter_Clean', 'chargedescr', 'Total_Cases_Sold_Lot'])['chgamt'].sum().reset_index()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:82  ->  'Avg_Deduction_Per_Case'  |  lot_deductions_summary['Avg_Deduction_Per_Case'] = np.where(lot_deductions_summary['Total_Cases_Sold_Lot'] > 0, lot_deductions_summary['Total_Deduction_Amount'] / lot_deductions_summary['Total_Cases_Sold_Lot'], np.nan)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:82  ->  'Total_Cases_Sold_Lot'  |  lot_deductions_summary['Avg_Deduction_Per_Case'] = np.where(lot_deductions_summary['Total_Cases_Sold_Lot'] > 0, lot_deductions_summary['Total_Deduction_Amount'] / lot_deductions_summary['Total_Cases_Sold_Lot'], np.nan)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:82  ->  'Total_Deduction_Amount'  |  lot_deductions_summary['Avg_Deduction_Per_Case'] = np.where(lot_deductions_summary['Total_Cases_Sold_Lot'] > 0, lot_deductions_summary['Total_Deduction_Amount'] / lot_deductions_summary['Total_Cases_Sold_Lot'], np.nan)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:82  ->  'Total_Cases_Sold_Lot'  |  lot_deductions_summary['Avg_Deduction_Per_Case'] = np.where(lot_deductions_summary['Total_Cases_Sold_Lot'] > 0, lot_deductions_summary['Total_Deduction_Amount'] / lot_deductions_summary['Total_Cases_Sold_Lot'], np.nan)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:97  ->  'chargedescr'  |  ocean_freight_details_df = df[df['chargedescr'].fillna('').astype(str).str.upper().str.contains("OCEAN FREIGHT|FLETE MARITIMO", na=False) & (df['Is_Advance'] == False) & (df['chgamt'] > 0)].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:97  ->  'Is_Advance'  |  ocean_freight_details_df = df[df['chargedescr'].fillna('').astype(str).str.upper().str.contains("OCEAN FREIGHT|FLETE MARITIMO", na=False) & (df['Is_Advance'] == False) & (df['chgamt'] > 0)].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:97  ->  'chgamt'  |  ocean_freight_details_df = df[df['chargedescr'].fillna('').astype(str).str.upper().str.contains("OCEAN FREIGHT|FLETE MARITIMO", na=False) & (df['Is_Advance'] == False) & (df['chgamt'] > 0)].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:100  ->  'trxtype'  |  lot_cases_sold = df[df['trxtype'] == 1].groupby('lotid')['invcicqnt'].sum().reset_index(name='Total_Cases_Sold_Lot')
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:100  ->  'invcicqnt'  |  lot_cases_sold = df[df['trxtype'] == 1].groupby('lotid')['invcicqnt'].sum().reset_index(name='Total_Cases_Sold_Lot')
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:103  ->  'Total_Cases_Sold_Lot'  |  ocean_freight_details_df['Total_Cases_Sold_Lot'] = ocean_freight_details_df['Total_Cases_Sold_Lot'].fillna(0)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:103  ->  'Total_Cases_Sold_Lot'  |  ocean_freight_details_df['Total_Cases_Sold_Lot'] = ocean_freight_details_df['Total_Cases_Sold_Lot'].fillna(0)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:105  ->  'Total_Cases_Sold_Lot'  |  ocean_freight_details_df['Total_Cases_Sold_Lot'] = 0
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:106  ->  'Ocean_Freight_Amount'  |  ocean_freight_details_df['Ocean_Freight_Amount'] = ocean_freight_details_df['chgamt']
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:106  ->  'chgamt'  |  ocean_freight_details_df['Ocean_Freight_Amount'] = ocean_freight_details_df['chgamt']
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:107  ->  'Ocean_Freight_Per_Case'  |  ocean_freight_details_df['Ocean_Freight_Per_Case'] = np.where(ocean_freight_details_df['Total_Cases_Sold_Lot'] > 0, ocean_freight_details_df['Ocean_Freight_Amount'] / ocean_freight_details_df['Total_Cases_Sold_Lot'], np.nan)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:107  ->  'Total_Cases_Sold_Lot'  |  ocean_freight_details_df['Ocean_Freight_Per_Case'] = np.where(ocean_freight_details_df['Total_Cases_Sold_Lot'] > 0, ocean_freight_details_df['Ocean_Freight_Amount'] / ocean_freight_details_df['Total_Cases_Sold_Lot'], np.nan)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:107  ->  'Ocean_Freight_Amount'  |  ocean_freight_details_df['Ocean_Freight_Per_Case'] = np.where(ocean_freight_details_df['Total_Cases_Sold_Lot'] > 0, ocean_freight_details_df['Ocean_Freight_Amount'] / ocean_freight_details_df['Total_Cases_Sold_Lot'], np.nan)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:107  ->  'Total_Cases_Sold_Lot'  |  ocean_freight_details_df['Ocean_Freight_Per_Case'] = np.where(ocean_freight_details_df['Total_Cases_Sold_Lot'] > 0, ocean_freight_details_df['Ocean_Freight_Amount'] / ocean_freight_details_df['Total_Cases_Sold_Lot'], np.nan)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:108  ->  'lotid'  |  result_df = ocean_freight_details_df[['lotid', 'Exporter_Clean', 'Exporter_Country', 'chargedescr', 'Ocean_Freight_Amount', 'Total_Cases_Sold_Lot', 'Ocean_Freight_Per_Case']].sort_values(by=['Exporter_Country', 'Exporter_Clean', 'lotid'])
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:108  ->  'Exporter_Clean'  |  result_df = ocean_freight_details_df[['lotid', 'Exporter_Clean', 'Exporter_Country', 'chargedescr', 'Ocean_Freight_Amount', 'Total_Cases_Sold_Lot', 'Ocean_Freight_Per_Case']].sort_values(by=['Exporter_Country', 'Exporter_Clean', 'lotid'])
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:108  ->  'Exporter_Country'  |  result_df = ocean_freight_details_df[['lotid', 'Exporter_Clean', 'Exporter_Country', 'chargedescr', 'Ocean_Freight_Amount', 'Total_Cases_Sold_Lot', 'Ocean_Freight_Per_Case']].sort_values(by=['Exporter_Country', 'Exporter_Clean', 'lotid'])
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:108  ->  'chargedescr'  |  result_df = ocean_freight_details_df[['lotid', 'Exporter_Clean', 'Exporter_Country', 'chargedescr', 'Ocean_Freight_Amount', 'Total_Cases_Sold_Lot', 'Ocean_Freight_Per_Case']].sort_values(by=['Exporter_Country', 'Exporter_Clean', 'lotid'])
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:108  ->  'Ocean_Freight_Amount'  |  result_df = ocean_freight_details_df[['lotid', 'Exporter_Clean', 'Exporter_Country', 'chargedescr', 'Ocean_Freight_Amount', 'Total_Cases_Sold_Lot', 'Ocean_Freight_Per_Case']].sort_values(by=['Exporter_Country', 'Exporter_Clean', 'lotid'])
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:108  ->  'Total_Cases_Sold_Lot'  |  result_df = ocean_freight_details_df[['lotid', 'Exporter_Clean', 'Exporter_Country', 'chargedescr', 'Ocean_Freight_Amount', 'Total_Cases_Sold_Lot', 'Ocean_Freight_Per_Case']].sort_values(by=['Exporter_Country', 'Exporter_Clean', 'lotid'])
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:108  ->  'Ocean_Freight_Per_Case'  |  result_df = ocean_freight_details_df[['lotid', 'Exporter_Clean', 'Exporter_Country', 'chargedescr', 'Ocean_Freight_Amount', 'Total_Cases_Sold_Lot', 'Ocean_Freight_Per_Case']].sort_values(by=['Exporter_Country', 'Exporter_Clean', 'lotid'])
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:121  ->  'Exporter Country'  |  comparison_df = detailed_freight[detailed_freight['Exporter Country'].isin(['Chile', 'Peru'])]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:124  ->  'Ocean Freight Per Case'  |  avg_freight_by_country = comparison_df.groupby('Exporter Country')['Ocean Freight Per Case'].mean().reset_index(name='Avg Ocean Freight Per Case')
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:139  ->  'trxtype'  |  sales_df = df[(df['trxtype'] == 1) & (df['invcicqnt'] != 0) & (df['Retailer_Name'] != "N/A") & (df['Retailer_Name'] != "N/A (Likely Product/Exporter Info)") & (df['Variety'] != "Unknown Variety") & (df['Packaging_Style'] != "Unknown")].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:139  ->  'invcicqnt'  |  sales_df = df[(df['trxtype'] == 1) & (df['invcicqnt'] != 0) & (df['Retailer_Name'] != "N/A") & (df['Retailer_Name'] != "N/A (Likely Product/Exporter Info)") & (df['Variety'] != "Unknown Variety") & (df['Packaging_Style'] != "Unknown")].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:139  ->  'Retailer_Name'  |  sales_df = df[(df['trxtype'] == 1) & (df['invcicqnt'] != 0) & (df['Retailer_Name'] != "N/A") & (df['Retailer_Name'] != "N/A (Likely Product/Exporter Info)") & (df['Variety'] != "Unknown Variety") & (df['Packaging_Style'] != "Unknown")].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:139  ->  'Retailer_Name'  |  sales_df = df[(df['trxtype'] == 1) & (df['invcicqnt'] != 0) & (df['Retailer_Name'] != "N/A") & (df['Retailer_Name'] != "N/A (Likely Product/Exporter Info)") & (df['Variety'] != "Unknown Variety") & (df['Packaging_Style'] != "Unknown")].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:139  ->  'Variety'  |  sales_df = df[(df['trxtype'] == 1) & (df['invcicqnt'] != 0) & (df['Retailer_Name'] != "N/A") & (df['Retailer_Name'] != "N/A (Likely Product/Exporter Info)") & (df['Variety'] != "Unknown Variety") & (df['Packaging_Style'] != "Unknown")].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:139  ->  'Packaging_Style'  |  sales_df = df[(df['trxtype'] == 1) & (df['invcicqnt'] != 0) & (df['Retailer_Name'] != "N/A") & (df['Retailer_Name'] != "N/A (Likely Product/Exporter Info)") & (df['Variety'] != "Unknown Variety") & (df['Packaging_Style'] != "Unknown")].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:145  ->  'Season'  |  retailer_performance_all_seasons_agg = sales_df.groupby(grouping_cols + ['Season']).agg(
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:156  ->  'Season'  |  current_season_df = sales_df[sales_df['Season'] == current_season_name_for_filter]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:168  ->  'Overall_Weighted_Avg_Price_invc'  |  retailer_performance_current_season_agg['Overall_Weighted_Avg_Price_invc'] = np.where(
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:169  ->  'Total_Cases_Sold_invc'  |  retailer_performance_current_season_agg['Total_Cases_Sold_invc'] != 0,
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:170  ->  'Total_Sales_Amount'  |  retailer_performance_current_season_agg['Total_Sales_Amount'] / retailer_performance_current_season_agg['Total_Cases_Sold_invc'],
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:170  ->  'Total_Cases_Sold_invc'  |  retailer_performance_current_season_agg['Total_Sales_Amount'] / retailer_performance_current_season_agg['Total_Cases_Sold_invc'],
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:195  ->  'trxtype'  |  odd_sales = df[(df['trxtype'] == 1) & (df['invcicqnt'] != 0) & (df['saleamt'].fillna(0) == 0) & (df['Retailer_Name'] != "N/A") & (df['Retailer_Name'] != "N/A (Likely Product/Exporter Info)")].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:195  ->  'invcicqnt'  |  odd_sales = df[(df['trxtype'] == 1) & (df['invcicqnt'] != 0) & (df['saleamt'].fillna(0) == 0) & (df['Retailer_Name'] != "N/A") & (df['Retailer_Name'] != "N/A (Likely Product/Exporter Info)")].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:195  ->  'saleamt'  |  odd_sales = df[(df['trxtype'] == 1) & (df['invcicqnt'] != 0) & (df['saleamt'].fillna(0) == 0) & (df['Retailer_Name'] != "N/A") & (df['Retailer_Name'] != "N/A (Likely Product/Exporter Info)")].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:195  ->  'Retailer_Name'  |  odd_sales = df[(df['trxtype'] == 1) & (df['invcicqnt'] != 0) & (df['saleamt'].fillna(0) == 0) & (df['Retailer_Name'] != "N/A") & (df['Retailer_Name'] != "N/A (Likely Product/Exporter Info)")].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:195  ->  'Retailer_Name'  |  odd_sales = df[(df['trxtype'] == 1) & (df['invcicqnt'] != 0) & (df['saleamt'].fillna(0) == 0) & (df['Retailer_Name'] != "N/A") & (df['Retailer_Name'] != "N/A (Likely Product/Exporter Info)")].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:213  ->  'trxtype'  |  charges_df = df[(df['trxtype'] == 2) & (df['Is_Advance'] == False) & (df['chgamt'] > 0) & ((df['Is_ProducePay_Commission'] == False) | (~df['chargedescr'].fillna('').astype(str).str.upper().str.contains("LIQUIDATION")))].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:213  ->  'Is_Advance'  |  charges_df = df[(df['trxtype'] == 2) & (df['Is_Advance'] == False) & (df['chgamt'] > 0) & ((df['Is_ProducePay_Commission'] == False) | (~df['chargedescr'].fillna('').astype(str).str.upper().str.contains("LIQUIDATION")))].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:213  ->  'chgamt'  |  charges_df = df[(df['trxtype'] == 2) & (df['Is_Advance'] == False) & (df['chgamt'] > 0) & ((df['Is_ProducePay_Commission'] == False) | (~df['chargedescr'].fillna('').astype(str).str.upper().str.contains("LIQUIDATION")))].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:213  ->  'Is_ProducePay_Commission'  |  charges_df = df[(df['trxtype'] == 2) & (df['Is_Advance'] == False) & (df['chgamt'] > 0) & ((df['Is_ProducePay_Commission'] == False) | (~df['chargedescr'].fillna('').astype(str).str.upper().str.contains("LIQUIDATION")))].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:213  ->  'chargedescr'  |  charges_df = df[(df['trxtype'] == 2) & (df['Is_Advance'] == False) & (df['chgamt'] > 0) & ((df['Is_ProducePay_Commission'] == False) | (~df['chargedescr'].fillna('').astype(str).str.upper().str.contains("LIQUIDATION")))].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:219  ->  'chgqnt'  |  occurrences_with_qnt = len(group[group['chgqnt'] != 0])
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:220  ->  'chgqnt'  |  occurrences_without_qnt_with_amt = len(group[(group['chgqnt'] == 0) & (group['chgamt'] != 0)])
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:220  ->  'chgamt'  |  occurrences_without_qnt_with_amt = len(group[(group['chgqnt'] == 0) & (group['chgamt'] != 0)])
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:221  ->  'chgqnt'  |  avg_amt_when_no_qnt = group[(group['chgqnt'] == 0) & (group['chgamt'] != 0)]['chgamt'].mean()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:221  ->  'chgamt'  |  avg_amt_when_no_qnt = group[(group['chgqnt'] == 0) & (group['chgamt'] != 0)]['chgamt'].mean()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:221  ->  'chgamt'  |  avg_amt_when_no_qnt = group[(group['chgqnt'] == 0) & (group['chgamt'] != 0)]['chgamt'].mean()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:222  ->  'chgqnt'  |  avg_amt_when_qnt = group[group['chgqnt'] != 0]['chgamt'].mean()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:222  ->  'chgamt'  |  avg_amt_when_qnt = group[group['chgqnt'] != 0]['chgamt'].mean()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:223  ->  'chgqnt'  |  avg_qnt_when_qnt = group[group['chgqnt'] != 0]['chgqnt'].mean()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:223  ->  'chgqnt'  |  avg_qnt_when_qnt = group[group['chgqnt'] != 0]['chgqnt'].mean()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:240  ->  'trxtype'  |  rate_df = df[(df['trxtype'] == 2) & (df['chgqnt'] != 0) & (df['chgamt'] != 0) & (df['Is_Advance'] == False) & ((df['Is_ProducePay_Commission'] == False) | (~df['chargedescr'].fillna('').astype(str).str.upper().str.contains("LIQUIDATION")))].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:240  ->  'chgqnt'  |  rate_df = df[(df['trxtype'] == 2) & (df['chgqnt'] != 0) & (df['chgamt'] != 0) & (df['Is_Advance'] == False) & ((df['Is_ProducePay_Commission'] == False) | (~df['chargedescr'].fillna('').astype(str).str.upper().str.contains("LIQUIDATION")))].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:240  ->  'chgamt'  |  rate_df = df[(df['trxtype'] == 2) & (df['chgqnt'] != 0) & (df['chgamt'] != 0) & (df['Is_Advance'] == False) & ((df['Is_ProducePay_Commission'] == False) | (~df['chargedescr'].fillna('').astype(str).str.upper().str.contains("LIQUIDATION")))].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:240  ->  'Is_Advance'  |  rate_df = df[(df['trxtype'] == 2) & (df['chgqnt'] != 0) & (df['chgamt'] != 0) & (df['Is_Advance'] == False) & ((df['Is_ProducePay_Commission'] == False) | (~df['chargedescr'].fillna('').astype(str).str.upper().str.contains("LIQUIDATION")))].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:240  ->  'Is_ProducePay_Commission'  |  rate_df = df[(df['trxtype'] == 2) & (df['chgqnt'] != 0) & (df['chgamt'] != 0) & (df['Is_Advance'] == False) & ((df['Is_ProducePay_Commission'] == False) | (~df['chargedescr'].fillna('').astype(str).str.upper().str.contains("LIQUIDATION")))].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:240  ->  'chargedescr'  |  rate_df = df[(df['trxtype'] == 2) & (df['chgqnt'] != 0) & (df['chgamt'] != 0) & (df['Is_Advance'] == False) & ((df['Is_ProducePay_Commission'] == False) | (~df['chargedescr'].fillna('').astype(str).str.upper().str.contains("LIQUIDATION")))].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:243  ->  'Charge_Rate'  |  rate_df['Charge_Rate'] = rate_df['chgamt'] / rate_df['chgqnt']
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:243  ->  'chgamt'  |  rate_df['Charge_Rate'] = rate_df['chgamt'] / rate_df['chgqnt']
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:243  ->  'chgqnt'  |  rate_df['Charge_Rate'] = rate_df['chgamt'] / rate_df['chgqnt']
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:244  ->  'Charge_Rate'  |  rate_summary = rate_df.groupby(['chargedescr', 'Exporter_Clean'])['Charge_Rate'].agg(['count', 'mean', 'median', 'std', 'min', 'max']).reset_index()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:261  ->  'chargedescr'  |  fumigation_df = df[df['chargedescr'].fillna('').astype(str).str.upper().str.contains("FUMIGATION") & (df['chgamt'] > 0)].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:261  ->  'chgamt'  |  fumigation_df = df[df['chargedescr'].fillna('').astype(str).str.upper().str.contains("FUMIGATION") & (df['chgamt'] > 0)].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:263  ->  'No fumigation charges found.'  |  print("No fumigation charges found."); return pd.DataFrame({'Status': ["No fumigation charges found."]})
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:267  ->  'Exporter_Country'  |  (fumigation_df['Exporter_Country'] != 'Chile')
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:273  ->  'lotid'  |  return rename_columns_for_readability(discrepancies[['lotid', 'Exporter_Clean', 'Exporter_Country', 'chargedescr', 'chgamt']].drop_duplicates())
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:273  ->  'Exporter_Clean'  |  return rename_columns_for_readability(discrepancies[['lotid', 'Exporter_Clean', 'Exporter_Country', 'chargedescr', 'chgamt']].drop_duplicates())
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:273  ->  'Exporter_Country'  |  return rename_columns_for_readability(discrepancies[['lotid', 'Exporter_Clean', 'Exporter_Country', 'chargedescr', 'chgamt']].drop_duplicates())
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:273  ->  'chargedescr'  |  return rename_columns_for_readability(discrepancies[['lotid', 'Exporter_Clean', 'Exporter_Country', 'chargedescr', 'chgamt']].drop_duplicates())
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:273  ->  'chgamt'  |  return rename_columns_for_readability(discrepancies[['lotid', 'Exporter_Clean', 'Exporter_Country', 'chargedescr', 'chgamt']].drop_duplicates())
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:276  ->  'No discrepancies found for non-Chilean fumigation.'  |  return pd.DataFrame({'Status': ["No discrepancies found for non-Chilean fumigation."]})
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:289  ->  'Is_ProducePay_Commission'  |  comm_df = df[(df['Is_ProducePay_Commission']) | (df['Is_Retailer_Commission'])].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:289  ->  'Is_Retailer_Commission'  |  comm_df = df[(df['Is_ProducePay_Commission']) | (df['Is_Retailer_Commission'])].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:295  ->  'Is_ProducePay_Commission'  |  if row['Is_ProducePay_Commission']:
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:297  ->  'descr'  |  if "LIQUIDATION" in str(row['descr']).upper():
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:299  ->  'Is_Retailer_Commission'  |  elif row['Is_Retailer_Commission']:
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:302  ->  'chgqnt'  |  if row['chgqnt'] != 0:
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:303  ->  'chgamt'  |  rate = row['chgamt'] / row['chgqnt']
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:303  ->  'chgqnt'  |  rate = row['chgamt'] / row['chgqnt']
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:304  ->  'lotid'  |  comm_summary_list.append({'lotid': row['lotid'], 'Exporter_Clean': row['Exporter_Clean'], 'chargedescr': row['chargedescr'], 'descr_original': row['descr'], 'Commission_Type': comm_type, 'Charge_Amount': row['chgamt'], 'Charge_Quantity': row['chgqnt'], 'Rate_Per_Case_chgqnt': rate})
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:304  ->  'Exporter_Clean'  |  comm_summary_list.append({'lotid': row['lotid'], 'Exporter_Clean': row['Exporter_Clean'], 'chargedescr': row['chargedescr'], 'descr_original': row['descr'], 'Commission_Type': comm_type, 'Charge_Amount': row['chgamt'], 'Charge_Quantity': row['chgqnt'], 'Rate_Per_Case_chgqnt': rate})
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:304  ->  'chargedescr'  |  comm_summary_list.append({'lotid': row['lotid'], 'Exporter_Clean': row['Exporter_Clean'], 'chargedescr': row['chargedescr'], 'descr_original': row['descr'], 'Commission_Type': comm_type, 'Charge_Amount': row['chgamt'], 'Charge_Quantity': row['chgqnt'], 'Rate_Per_Case_chgqnt': rate})
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:304  ->  'descr'  |  comm_summary_list.append({'lotid': row['lotid'], 'Exporter_Clean': row['Exporter_Clean'], 'chargedescr': row['chargedescr'], 'descr_original': row['descr'], 'Commission_Type': comm_type, 'Charge_Amount': row['chgamt'], 'Charge_Quantity': row['chgqnt'], 'Rate_Per_Case_chgqnt': rate})
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:304  ->  'chgamt'  |  comm_summary_list.append({'lotid': row['lotid'], 'Exporter_Clean': row['Exporter_Clean'], 'chargedescr': row['chargedescr'], 'descr_original': row['descr'], 'Commission_Type': comm_type, 'Charge_Amount': row['chgamt'], 'Charge_Quantity': row['chgqnt'], 'Rate_Per_Case_chgqnt': rate})
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:304  ->  'chgqnt'  |  comm_summary_list.append({'lotid': row['lotid'], 'Exporter_Clean': row['Exporter_Clean'], 'chargedescr': row['chargedescr'], 'descr_original': row['descr'], 'Commission_Type': comm_type, 'Charge_Amount': row['chgamt'], 'Charge_Quantity': row['chgqnt'], 'Rate_Per_Case_chgqnt': rate})
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:317  ->  'Exporter_Clean'  |  agrolatina_df = df[df['Exporter_Clean'] == "Agrolatina"].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:321  ->  'chargedescr'  |  specific_charges_df = agrolatina_df[agrolatina_df['chargedescr'].fillna('').astype(str).str.upper().isin(agrolatina_charges_upper) & (agrolatina_df['trxtype'] == 2) & (agrolatina_df['chgamt'] != 0)]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:321  ->  'trxtype'  |  specific_charges_df = agrolatina_df[agrolatina_df['chargedescr'].fillna('').astype(str).str.upper().isin(agrolatina_charges_upper) & (agrolatina_df['trxtype'] == 2) & (agrolatina_df['chgamt'] != 0)]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:321  ->  'chgamt'  |  specific_charges_df = agrolatina_df[agrolatina_df['chargedescr'].fillna('').astype(str).str.upper().isin(agrolatina_charges_upper) & (agrolatina_df['trxtype'] == 2) & (agrolatina_df['chgamt'] != 0)]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:336  ->  'Exporter_Clean'  |  for exporter in df['Exporter_Clean'].dropna().unique():
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:337  ->  'Exporter_Clean'  |  df_exp = df[(df['Exporter_Clean'] == exporter) & (df['trxtype'] == 1) & (df['invcicqnt'] != 0)]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:337  ->  'trxtype'  |  df_exp = df[(df['Exporter_Clean'] == exporter) & (df['trxtype'] == 1) & (df['invcicqnt'] != 0)]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:337  ->  'invcicqnt'  |  df_exp = df[(df['Exporter_Clean'] == exporter) & (df['trxtype'] == 1) & (df['invcicqnt'] != 0)]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:345  ->  'Exporter Clean'  |  summary['Exporter Clean'] = exporter
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:357  ->  'Exporter_Clean'  |  for exporter in df['Exporter_Clean'].dropna().unique():
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:358  ->  'Exporter_Clean'  |  df_exp = df[(df['Exporter_Clean'] == exporter) & (df['trxtype'] == 2)]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:358  ->  'trxtype'  |  df_exp = df[(df['Exporter_Clean'] == exporter) & (df['trxtype'] == 2)]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:369  ->  'Exporter Clean'  |  pivot['Exporter Clean'] = exporter
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:381  ->  'Chargedescr'  |  for charge in deductions_summary_df['Chargedescr'].dropna().unique():
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:382  ->  'Chargedescr'  |  df_charge = deductions_summary_df[deductions_summary_df['Chargedescr'] == charge]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:390  ->  'Exporter Clean'  |  summary = summary[summary['Exporter Clean'].isin(exporters_list)]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:406  ->  'Avg Deduction Per Case'  |  group['Avg Deduction Per Case'] = group.apply(
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:407  ->  'Total Deduction Amount'  |  lambda row: row['Total Deduction Amount'] / row['Total Cases Sold Lot'] if row['Total Cases Sold Lot'] > 0 else np.nan,
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:407  ->  'Total Cases Sold Lot'  |  lambda row: row['Total Deduction Amount'] / row['Total Cases Sold Lot'] if row['Total Cases Sold Lot'] > 0 else np.nan,
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:407  ->  'Total Cases Sold Lot'  |  lambda row: row['Total Deduction Amount'] / row['Total Cases Sold Lot'] if row['Total Cases Sold Lot'] > 0 else np.nan,
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:427  ->  'Sourceidx'  |  filtered = df[df['Sourceidx'] == 1].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:428  ->  'Lotid'  |  filtered = filtered[['Lotid', 'Exporter Clean', 'Recvqnt', 'Refdate', 'Variety', 'Packaging Style']]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:428  ->  'Exporter Clean'  |  filtered = filtered[['Lotid', 'Exporter Clean', 'Recvqnt', 'Refdate', 'Variety', 'Packaging Style']]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:428  ->  'Recvqnt'  |  filtered = filtered[['Lotid', 'Exporter Clean', 'Recvqnt', 'Refdate', 'Variety', 'Packaging Style']]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:428  ->  'Refdate'  |  filtered = filtered[['Lotid', 'Exporter Clean', 'Recvqnt', 'Refdate', 'Variety', 'Packaging Style']]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:428  ->  'Variety'  |  filtered = filtered[['Lotid', 'Exporter Clean', 'Recvqnt', 'Refdate', 'Variety', 'Packaging Style']]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:428  ->  'Packaging Style'  |  filtered = filtered[['Lotid', 'Exporter Clean', 'Recvqnt', 'Refdate', 'Variety', 'Packaging Style']]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:453  ->  'Sourceidx'  |  stock_inicial = df[df['Sourceidx'] == 1][['Lotid', 'Exporter Clean', 'Recvqnt', 'Refdate', 'Variety', 'Packaging Style']].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:453  ->  'Lotid'  |  stock_inicial = df[df['Sourceidx'] == 1][['Lotid', 'Exporter Clean', 'Recvqnt', 'Refdate', 'Variety', 'Packaging Style']].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:453  ->  'Exporter Clean'  |  stock_inicial = df[df['Sourceidx'] == 1][['Lotid', 'Exporter Clean', 'Recvqnt', 'Refdate', 'Variety', 'Packaging Style']].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:453  ->  'Recvqnt'  |  stock_inicial = df[df['Sourceidx'] == 1][['Lotid', 'Exporter Clean', 'Recvqnt', 'Refdate', 'Variety', 'Packaging Style']].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:453  ->  'Refdate'  |  stock_inicial = df[df['Sourceidx'] == 1][['Lotid', 'Exporter Clean', 'Recvqnt', 'Refdate', 'Variety', 'Packaging Style']].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:453  ->  'Variety'  |  stock_inicial = df[df['Sourceidx'] == 1][['Lotid', 'Exporter Clean', 'Recvqnt', 'Refdate', 'Variety', 'Packaging Style']].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:453  ->  'Packaging Style'  |  stock_inicial = df[df['Sourceidx'] == 1][['Lotid', 'Exporter Clean', 'Recvqnt', 'Refdate', 'Variety', 'Packaging Style']].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:460  ->  'Trxtype'  |  ventas = df[df['Trxtype'] == 1][['Lotid', 'Invcicqnt', 'Refdate']].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:460  ->  'Lotid'  |  ventas = df[df['Trxtype'] == 1][['Lotid', 'Invcicqnt', 'Refdate']].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:460  ->  'Invcicqnt'  |  ventas = df[df['Trxtype'] == 1][['Lotid', 'Invcicqnt', 'Refdate']].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:460  ->  'Refdate'  |  ventas = df[df['Trxtype'] == 1][['Lotid', 'Invcicqnt', 'Refdate']].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:467  ->  'Fecha Venta'  |  ventas_hasta_corte = ventas[ventas['Fecha Venta'] <= fecha_corte].groupby('Lotid')['Cajas Vendidas'].sum().reset_index()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:467  ->  'Cajas Vendidas'  |  ventas_hasta_corte = ventas[ventas['Fecha Venta'] <= fecha_corte].groupby('Lotid')['Cajas Vendidas'].sum().reset_index()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:471  ->  'Stock Inicial'  |  stock_inicial_sum = stock_inicial.groupby(['Lotid', 'Exporter Clean', 'Fecha Ingreso', 'Variety', 'Packaging Style'])['Stock Inicial'].sum().reset_index()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:475  ->  'Total Vendido'  |  inventario['Total Vendido'] = inventario['Total Vendido'].fillna(0)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:475  ->  'Total Vendido'  |  inventario['Total Vendido'] = inventario['Total Vendido'].fillna(0)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:476  ->  'Inventario Actual'  |  inventario['Inventario Actual'] = inventario['Stock Inicial'] - inventario['Total Vendido']
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:476  ->  'Stock Inicial'  |  inventario['Inventario Actual'] = inventario['Stock Inicial'] - inventario['Total Vendido']
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:476  ->  'Total Vendido'  |  inventario['Inventario Actual'] = inventario['Stock Inicial'] - inventario['Total Vendido']
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:477  ->  'Inventario Actual'  |  inventario['Inventario Actual'] = inventario['Inventario Actual'].apply(lambda x: max(x, 0))  # No negativos
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:477  ->  'Inventario Actual'  |  inventario['Inventario Actual'] = inventario['Inventario Actual'].apply(lambda x: max(x, 0))  # No negativos
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:480  ->  'Fecha Ingreso'  |  inventario['Días en Inventario'] = (pd.to_datetime(fecha_corte) - pd.to_datetime(inventario['Fecha Ingreso'])).dt.days
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:486  ->  'Inventario Actual'  |  inventario = inventario[inventario['Inventario Actual'] > 0]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:489  ->  'Exporter Clean'  |  inventario = inventario[['Exporter Clean', 'Lotid', 'Variety', 'Packaging Style', 'Fecha Ingreso', 'Stock Inicial', 'Total Vendido', 'Inventario Actual', 'Días en Inventario']]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:489  ->  'Lotid'  |  inventario = inventario[['Exporter Clean', 'Lotid', 'Variety', 'Packaging Style', 'Fecha Ingreso', 'Stock Inicial', 'Total Vendido', 'Inventario Actual', 'Días en Inventario']]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:489  ->  'Variety'  |  inventario = inventario[['Exporter Clean', 'Lotid', 'Variety', 'Packaging Style', 'Fecha Ingreso', 'Stock Inicial', 'Total Vendido', 'Inventario Actual', 'Días en Inventario']]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:489  ->  'Packaging Style'  |  inventario = inventario[['Exporter Clean', 'Lotid', 'Variety', 'Packaging Style', 'Fecha Ingreso', 'Stock Inicial', 'Total Vendido', 'Inventario Actual', 'Días en Inventario']]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:489  ->  'Fecha Ingreso'  |  inventario = inventario[['Exporter Clean', 'Lotid', 'Variety', 'Packaging Style', 'Fecha Ingreso', 'Stock Inicial', 'Total Vendido', 'Inventario Actual', 'Días en Inventario']]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:489  ->  'Stock Inicial'  |  inventario = inventario[['Exporter Clean', 'Lotid', 'Variety', 'Packaging Style', 'Fecha Ingreso', 'Stock Inicial', 'Total Vendido', 'Inventario Actual', 'Días en Inventario']]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:489  ->  'Total Vendido'  |  inventario = inventario[['Exporter Clean', 'Lotid', 'Variety', 'Packaging Style', 'Fecha Ingreso', 'Stock Inicial', 'Total Vendido', 'Inventario Actual', 'Días en Inventario']]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:489  ->  'Inventario Actual'  |  inventario = inventario[['Exporter Clean', 'Lotid', 'Variety', 'Packaging Style', 'Fecha Ingreso', 'Stock Inicial', 'Total Vendido', 'Inventario Actual', 'Días en Inventario']]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:489  ->  'Días en Inventario'  |  inventario = inventario[['Exporter Clean', 'Lotid', 'Variety', 'Packaging Style', 'Fecha Ingreso', 'Stock Inicial', 'Total Vendido', 'Inventario Actual', 'Días en Inventario']]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:505  ->  'Sourceidx'  |  stock_inicial = df[df['Sourceidx'] == 1][['Lotid', 'Exporter Clean', 'Recvqnt', 'Refdate', 'Variety', 'Packaging Style']].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:505  ->  'Lotid'  |  stock_inicial = df[df['Sourceidx'] == 1][['Lotid', 'Exporter Clean', 'Recvqnt', 'Refdate', 'Variety', 'Packaging Style']].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:505  ->  'Exporter Clean'  |  stock_inicial = df[df['Sourceidx'] == 1][['Lotid', 'Exporter Clean', 'Recvqnt', 'Refdate', 'Variety', 'Packaging Style']].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:505  ->  'Recvqnt'  |  stock_inicial = df[df['Sourceidx'] == 1][['Lotid', 'Exporter Clean', 'Recvqnt', 'Refdate', 'Variety', 'Packaging Style']].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:505  ->  'Refdate'  |  stock_inicial = df[df['Sourceidx'] == 1][['Lotid', 'Exporter Clean', 'Recvqnt', 'Refdate', 'Variety', 'Packaging Style']].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:505  ->  'Variety'  |  stock_inicial = df[df['Sourceidx'] == 1][['Lotid', 'Exporter Clean', 'Recvqnt', 'Refdate', 'Variety', 'Packaging Style']].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:505  ->  'Packaging Style'  |  stock_inicial = df[df['Sourceidx'] == 1][['Lotid', 'Exporter Clean', 'Recvqnt', 'Refdate', 'Variety', 'Packaging Style']].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:515  ->  'Trxtype'  |  ventas = df[df['Trxtype'] == 1][['Lotid', 'Retailer Name', 'Invcicqnt', 'Refdate']].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:515  ->  'Lotid'  |  ventas = df[df['Trxtype'] == 1][['Lotid', 'Retailer Name', 'Invcicqnt', 'Refdate']].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:515  ->  'Retailer Name'  |  ventas = df[df['Trxtype'] == 1][['Lotid', 'Retailer Name', 'Invcicqnt', 'Refdate']].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:515  ->  'Invcicqnt'  |  ventas = df[df['Trxtype'] == 1][['Lotid', 'Retailer Name', 'Invcicqnt', 'Refdate']].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:515  ->  'Refdate'  |  ventas = df[df['Trxtype'] == 1][['Lotid', 'Retailer Name', 'Invcicqnt', 'Refdate']].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:526  ->  'Fecha Venta'  |  detalle['Días en Inventario'] = (pd.to_datetime(detalle['Fecha Venta']) - pd.to_datetime(detalle['Fecha Ingreso'])).dt.days
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:526  ->  'Fecha Ingreso'  |  detalle['Días en Inventario'] = (pd.to_datetime(detalle['Fecha Venta']) - pd.to_datetime(detalle['Fecha Ingreso'])).dt.days
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:529  ->  'Exporter Clean'  |  detalle = detalle[['Exporter Clean', 'Lotid', 'Variety', 'Packaging Style', 'Fecha Ingreso', 'Stock Inicial', 'Fecha Venta', 'Retailer Name', 'Cajas Vendidas', 'Días en Inventario']]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:529  ->  'Lotid'  |  detalle = detalle[['Exporter Clean', 'Lotid', 'Variety', 'Packaging Style', 'Fecha Ingreso', 'Stock Inicial', 'Fecha Venta', 'Retailer Name', 'Cajas Vendidas', 'Días en Inventario']]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:529  ->  'Variety'  |  detalle = detalle[['Exporter Clean', 'Lotid', 'Variety', 'Packaging Style', 'Fecha Ingreso', 'Stock Inicial', 'Fecha Venta', 'Retailer Name', 'Cajas Vendidas', 'Días en Inventario']]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:529  ->  'Packaging Style'  |  detalle = detalle[['Exporter Clean', 'Lotid', 'Variety', 'Packaging Style', 'Fecha Ingreso', 'Stock Inicial', 'Fecha Venta', 'Retailer Name', 'Cajas Vendidas', 'Días en Inventario']]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:529  ->  'Fecha Ingreso'  |  detalle = detalle[['Exporter Clean', 'Lotid', 'Variety', 'Packaging Style', 'Fecha Ingreso', 'Stock Inicial', 'Fecha Venta', 'Retailer Name', 'Cajas Vendidas', 'Días en Inventario']]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:529  ->  'Stock Inicial'  |  detalle = detalle[['Exporter Clean', 'Lotid', 'Variety', 'Packaging Style', 'Fecha Ingreso', 'Stock Inicial', 'Fecha Venta', 'Retailer Name', 'Cajas Vendidas', 'Días en Inventario']]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:529  ->  'Fecha Venta'  |  detalle = detalle[['Exporter Clean', 'Lotid', 'Variety', 'Packaging Style', 'Fecha Ingreso', 'Stock Inicial', 'Fecha Venta', 'Retailer Name', 'Cajas Vendidas', 'Días en Inventario']]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:529  ->  'Retailer Name'  |  detalle = detalle[['Exporter Clean', 'Lotid', 'Variety', 'Packaging Style', 'Fecha Ingreso', 'Stock Inicial', 'Fecha Venta', 'Retailer Name', 'Cajas Vendidas', 'Días en Inventario']]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:529  ->  'Cajas Vendidas'  |  detalle = detalle[['Exporter Clean', 'Lotid', 'Variety', 'Packaging Style', 'Fecha Ingreso', 'Stock Inicial', 'Fecha Venta', 'Retailer Name', 'Cajas Vendidas', 'Días en Inventario']]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/analysis.py:529  ->  'Días en Inventario'  |  detalle = detalle[['Exporter Clean', 'Lotid', 'Variety', 'Packaging Style', 'Fecha Ingreso', 'Stock Inicial', 'Fecha Venta', 'Retailer Name', 'Cajas Vendidas', 'Días en Inventario']]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/qc.py:37  ->  'Lot_Financial_Sum_All'  |  df_lot_fin_sum_all_qc = excel_sheets_data_dict.get("Lot_Financial_Sum_All")
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/qc.py:46  ->  'Lotid'  |  f"FOB Price calculation matches for sample lot {sample_row_fin.get('Lotid', 'N/A')}",
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/qc.py:56  ->  'Total Advances'  |  (df_lot_fin_sum_all_qc['Total Advances'] >= 0).all()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/qc.py:77  ->  'Retailer_Perf_Season'  |  df_retailer_perf_season_qc = excel_sheets_data_dict.get("Retailer_Perf_Season")
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/qc.py:79  ->  'Total Cases Sold Invc'  |  total_cases_all_retailer_perf_csv = df_retailer_perf_season_qc['Total Cases Sold Invc'].sum()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/qc.py:80  ->  'Total Sales Amount'  |  total_sales_all_retailer_perf_csv = df_retailer_perf_season_qc['Total Sales Amount'].sum()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/qc.py:83  ->  'trxtype'  |  (df_full_processed_season_qc['trxtype'] == 1) &
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/qc.py:84  ->  'invcicqnt'  |  (df_full_processed_season_qc['invcicqnt'] != 0) &
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/qc.py:85  ->  'Retailer_Name'  |  (df_full_processed_season_qc['Retailer_Name'] != "N/A") &
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/qc.py:86  ->  'Retailer_Name'  |  (df_full_processed_season_qc['Retailer_Name'] != "N/A (Likely Product/Exporter Info)") &
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/qc.py:87  ->  'Variety'  |  (df_full_processed_season_qc['Variety'] != "Unknown Variety") &
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/qc.py:88  ->  'Packaging_Style'  |  (df_full_processed_season_qc['Packaging_Style'] != "Unknown")
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/qc.py:90  ->  'invcicqnt'  |  calculated_total_cases_rp = sales_data_for_rp_qc['invcicqnt'].sum()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/qc.py:91  ->  'saleamt'  |  calculated_total_sales_rp = sales_data_for_rp_qc['saleamt'].sum()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/qc.py:108  ->  'Total Cases Sold'  |  sum_cases_from_per_exporter_reports += r_df['Total Cases Sold'].sum()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/qc.py:109  ->  'Total Sales Amount'  |  sum_sales_from_per_exporter_reports += r_df['Total Sales Amount'].sum()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/qc.py:126  ->  'DQ_Deduc_NoSales'  |  df_dq_deduc_no_sales = excel_sheets_data_dict.get("DQ_Deduc_NoSales")
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/qc.py:133  ->  'DQ_Unknown_Exp'  |  df_dq_unknown_exp = excel_sheets_data_dict.get("DQ_Unknown_Exp")
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/qc.py:140  ->  'Fumigation_Analysis'  |  df_fumigation = excel_sheets_data_dict.get("Fumigation_Analysis")
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/qc.py:143  ->  'Exporter Country'  |  (df_fumigation['Exporter Country'] != 'Chile')
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/qc.py:148  ->  'Lotid'  |  details_str += discrepancies[['Lotid', 'Exporter Clean', 'Exporter Country', 'Chargedescr', 'Chgamt']].to_string(index=False)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/qc.py:148  ->  'Exporter Clean'  |  details_str += discrepancies[['Lotid', 'Exporter Clean', 'Exporter Country', 'Chargedescr', 'Chgamt']].to_string(index=False)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/qc.py:148  ->  'Exporter Country'  |  details_str += discrepancies[['Lotid', 'Exporter Clean', 'Exporter Country', 'Chargedescr', 'Chgamt']].to_string(index=False)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/qc.py:148  ->  'Chargedescr'  |  details_str += discrepancies[['Lotid', 'Exporter Clean', 'Exporter Country', 'Chargedescr', 'Chgamt']].to_string(index=False)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/qc.py:148  ->  'Chgamt'  |  details_str += discrepancies[['Lotid', 'Exporter Clean', 'Exporter Country', 'Chargedescr', 'Chgamt']].to_string(index=False)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/qc.py:160  ->  'Processed_Data'  |  df_processed_qc = excel_sheets_data_dict.get("Processed_Data")
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/qc.py:161  ->  'Deduc_Summary'  |  df_deduc_summary_qc = excel_sheets_data_dict.get("Deduc_Summary")
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/qc.py:166  ->  'Trxtype'  |  total_cases_from_processed = df_processed_qc[df_processed_qc['Trxtype'] == 1]['Invcicqnt'].sum()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/qc.py:166  ->  'Invcicqnt'  |  total_cases_from_processed = df_processed_qc[df_processed_qc['Trxtype'] == 1]['Invcicqnt'].sum()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/qc.py:167  ->  'Lotid'  |  total_cases_from_deduc_summary = df_deduc_summary_qc.drop_duplicates(subset=['Lotid'])['Total Cases Sold Lot'].sum()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/qc.py:167  ->  'Total Cases Sold Lot'  |  total_cases_from_deduc_summary = df_deduc_summary_qc.drop_duplicates(subset=['Lotid'])['Total Cases Sold Lot'].sum()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/utils.py:216  ->  'Sheet'  |  if "Sheet" in writer.book.sheetnames and writer.book["Sheet"] != ws_desc:
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/utils.py:217  ->  'Sheet'  |  std = writer.book["Sheet"]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:43  ->  'refdate'  |  df_processed['refdate'] = pd.to_datetime(df_processed['refdate'], errors='coerce')
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:43  ->  'refdate'  |  df_processed['refdate'] = pd.to_datetime(df_processed['refdate'], errors='coerce')
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:44  ->  'pricepercase_cleaned'  |  df_processed['pricepercase_cleaned'] = pd.to_numeric(
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:45  ->  'pricepercase'  |  df_processed['pricepercase'].astype(str).str.replace(r'[$,]', '', regex=True), errors='coerce'
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:47  ->  'invcicqnt'  |  df_processed['invcicqnt'] = pd.to_numeric(df_processed['invcicqnt'], errors='coerce').fillna(0)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:47  ->  'invcicqnt'  |  df_processed['invcicqnt'] = pd.to_numeric(df_processed['invcicqnt'], errors='coerce').fillna(0)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:48  ->  'rcptqnt'  |  df_processed['rcptqnt'] = pd.to_numeric(df_processed['rcptqnt'], errors='coerce').fillna(0)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:48  ->  'rcptqnt'  |  df_processed['rcptqnt'] = pd.to_numeric(df_processed['rcptqnt'], errors='coerce').fillna(0)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:49  ->  'saleamt'  |  df_processed['saleamt'] = pd.to_numeric(df_processed['saleamt'], errors='coerce').fillna(0)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:49  ->  'saleamt'  |  df_processed['saleamt'] = pd.to_numeric(df_processed['saleamt'], errors='coerce').fillna(0)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:50  ->  'chgamt'  |  df_processed['chgamt'] = pd.to_numeric(df_processed['chgamt'], errors='coerce').fillna(0)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:50  ->  'chgamt'  |  df_processed['chgamt'] = pd.to_numeric(df_processed['chgamt'], errors='coerce').fillna(0)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:51  ->  'chgqnt'  |  df_processed['chgqnt'] = pd.to_numeric(df_processed['chgqnt'], errors='coerce').fillna(0)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:51  ->  'chgqnt'  |  df_processed['chgqnt'] = pd.to_numeric(df_processed['chgqnt'], errors='coerce').fillna(0)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:53  ->  'Exporter_Clean'  |  df_processed['Exporter_Clean'] = df_processed.apply(
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:55  ->  'lotdescr'  |  row['lotdescr'], row['lotid'], exporter_mappings_dict, specific_lotid_exporter_map
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:55  ->  'lotid'  |  row['lotdescr'], row['lotid'], exporter_mappings_dict, specific_lotid_exporter_map
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:58  ->  'Exporter_Country'  |  df_processed['Exporter_Country'] = df_processed['Exporter_Clean'].map(exporter_country_m).fillna("Unknown Country")
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:58  ->  'Exporter_Clean'  |  df_processed['Exporter_Country'] = df_processed['Exporter_Clean'].map(exporter_country_m).fillna("Unknown Country")
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:59  ->  'Variety'  |  df_processed['Variety'] = df_processed.apply(
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:61  ->  'vrtyinvc'  |  row['vrtyinvc'], row['descr'], grape_varieties_s, all_exporter_tags_s, variety_norm_map
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:61  ->  'descr'  |  row['vrtyinvc'], row['descr'], grape_varieties_s, all_exporter_tags_s, variety_norm_map
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:67  ->  'gwrproductdescr'  |  row['gwrproductdescr'], row['pricepercase'], pkg_detail_patterns, pkg_style_keywords
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:67  ->  'pricepercase'  |  row['gwrproductdescr'], row['pricepercase'], pkg_detail_patterns, pkg_style_keywords
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:70  ->  'Packaging_Style'  |  df_processed['Packaging_Style'] = [info[0] for info in packaging_info]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:71  ->  'Packaging_Detail'  |  df_processed['Packaging_Detail'] = [info[1] for info in packaging_info]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:73  ->  'Retailer_Name'  |  df_processed['Retailer_Name'] = df_processed.apply(
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:75  ->  'descr'  |  row['descr'], row['trxtype'], row['invcicqnt'], all_exporter_tags_s
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:75  ->  'trxtype'  |  row['descr'], row['trxtype'], row['invcicqnt'], all_exporter_tags_s
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:75  ->  'invcicqnt'  |  row['descr'], row['trxtype'], row['invcicqnt'], all_exporter_tags_s
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:78  ->  'Season'  |  df_processed['Season'] = df_processed['refdate'].apply(define_season)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:78  ->  'refdate'  |  df_processed['Season'] = df_processed['refdate'].apply(define_season)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:80  ->  'Price_Per_Case_invc'  |  df_processed['Price_Per_Case_invc'] = np.where(
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:81  ->  'invcicqnt'  |  df_processed['invcicqnt'] != 0,
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:82  ->  'saleamt'  |  df_processed['saleamt'] / df_processed['invcicqnt'],
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:82  ->  'invcicqnt'  |  df_processed['saleamt'] / df_processed['invcicqnt'],
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:85  ->  'Price_Per_Case_rcpt'  |  df_processed['Price_Per_Case_rcpt'] = np.where(
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:86  ->  'rcptqnt'  |  df_processed['rcptqnt'] != 0,
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:87  ->  'saleamt'  |  df_processed['saleamt'] / df_processed['rcptqnt'],
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:87  ->  'rcptqnt'  |  df_processed['saleamt'] / df_processed['rcptqnt'],
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:91  ->  'chargedescr'  |  chargedescr_str_upper = df_processed['chargedescr'].fillna('').astype(str).str.upper()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:92  ->  'descr'  |  descr_str_upper = df_processed['descr'].fillna('').astype(str).str.upper()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:94  ->  'Is_Advance'  |  df_processed['Is_Advance'] = chargedescr_str_upper.str.contains("ADVANCE|ANTICIPO", na=False)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:95  ->  'chgamt'  |  pp_comm_cond1 = (df_processed['chgamt'] < 0)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:101  ->  'Is_ProducePay_Commission'  |  df_processed['Is_ProducePay_Commission'] = pp_comm_cond1 | pp_comm_cond2 | pp_comm_cond3
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:102  ->  'Is_Retailer_Commission'  |  df_processed['Is_Retailer_Commission'] = (
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:103  ->  'trxtype'  |  (df_processed['trxtype'] == 2) &
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:105  ->  'Is_ProducePay_Commission'  |  (~df_processed['Is_ProducePay_Commission']) &
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/data_processing.py:106  ->  'Is_Advance'  |  (~df_processed['Is_Advance'])
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/main.py:77  ->  'Season'  |  seasons_to_process = processed_data['Season'].dropna().unique()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/main.py:85  ->  'Season'  |  df_season = processed_data[processed_data['Season'] == season_name].copy()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/main.py:92  ->  'Processed_Data'  |  excel_sheets_season["Processed_Data"] = rename_columns_for_readability(df_season.copy())
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/main.py:95  ->  'Initial_Stock_By_Lotid'  |  excel_sheets_season["Initial_Stock_By_Lotid"] = analyze_initial_stock_by_lotid(df_season)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/main.py:96  ->  'Inventory_By_Exporter_FIFO'  |  excel_sheets_season["Inventory_By_Exporter_FIFO"] = analyze_inventory_by_exporter_fifo(df_season)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/main.py:97  ->  'Deduc_Summary'  |  excel_sheets_season["Deduc_Summary"] = deductions_summary_season_numeric
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/main.py:101  ->  'Deduc_Summary_Lotid'  |  excel_sheets_season["Deduc_Summary_Lotid"] = deduc_summary_lotid
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/main.py:103  ->  'Pivoted_Deduc'  |  excel_sheets_season["Pivoted_Deduc"] = analyze_deductions_by_category_per_lot(df_season)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/main.py:105  ->  'Lot_Financial_Sum_All'  |  excel_sheets_season["Lot_Financial_Sum_All"] = lot_financial_summary_all_season
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/main.py:106  ->  'OceanFreight_Detail'  |  excel_sheets_season["OceanFreight_Detail"] = get_detailed_ocean_freight_data(df_season)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/main.py:107  ->  'OceanFreight_Sum'  |  excel_sheets_season["OceanFreight_Sum"] = analyze_ocean_freight_summary_by_country(df_season)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/main.py:110  ->  'Retailer_Perf_Season'  |  excel_sheets_season["Retailer_Perf_Season"] = retailer_perf_s
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/main.py:112  ->  'Odd_Retailers'  |  excel_sheets_season["Odd_Retailers"] = analyze_odd_retailers(df_season)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/main.py:113  ->  'Fixed_Var_Charges'  |  excel_sheets_season["Fixed_Var_Charges"] = analyze_fixed_vs_variable_charges(df_season)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/main.py:114  ->  'Charge_Rate_Consist'  |  excel_sheets_season["Charge_Rate_Consist"] = analyze_charge_rate_consistency(df_season)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/main.py:115  ->  'Fumigation_Analysis'  |  excel_sheets_season["Fumigation_Analysis"] = analyze_fumigation_charges(df_season)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/main.py:116  ->  'Commission_Analysis'  |  excel_sheets_season["Commission_Analysis"] = analyze_commissions_overview(df_season)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/main.py:117  ->  'Sales_Detail_By_Lotid'  |  excel_sheets_season["Sales_Detail_By_Lotid"] = analyze_sales_detail_by_lotid(df_season)
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/main.py:120  ->  'Total Cases Sold Lot'  |  dq_deduc_no_sales = deductions_summary_season_numeric[deductions_summary_season_numeric['Total Cases Sold Lot'] == 0]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/main.py:121  ->  'DQ_Deduc_NoSales'  |  excel_sheets_season["DQ_Deduc_NoSales"] = dq_deduc_no_sales[['Lotid', 'Exporter Clean', 'Chargedescr', 'Total Deduction Amount']].drop_duplicates()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/main.py:121  ->  'Lotid'  |  excel_sheets_season["DQ_Deduc_NoSales"] = dq_deduc_no_sales[['Lotid', 'Exporter Clean', 'Chargedescr', 'Total Deduction Amount']].drop_duplicates()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/main.py:121  ->  'Exporter Clean'  |  excel_sheets_season["DQ_Deduc_NoSales"] = dq_deduc_no_sales[['Lotid', 'Exporter Clean', 'Chargedescr', 'Total Deduction Amount']].drop_duplicates()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/main.py:121  ->  'Chargedescr'  |  excel_sheets_season["DQ_Deduc_NoSales"] = dq_deduc_no_sales[['Lotid', 'Exporter Clean', 'Chargedescr', 'Total Deduction Amount']].drop_duplicates()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/main.py:121  ->  'Total Deduction Amount'  |  excel_sheets_season["DQ_Deduc_NoSales"] = dq_deduc_no_sales[['Lotid', 'Exporter Clean', 'Chargedescr', 'Total Deduction Amount']].drop_duplicates()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/main.py:123  ->  'DQ_Unknown_Exp'  |  excel_sheets_season["DQ_Unknown_Exp"] = rename_columns_for_readability(
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/main.py:124  ->  'Exporter Clean'  |  df_season[df_season['Exporter Clean'] == "Unknown Exporter"][['Lotid', 'Lotdescr']].drop_duplicates()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/main.py:124  ->  'Lotid'  |  df_season[df_season['Exporter Clean'] == "Unknown Exporter"][['Lotid', 'Lotdescr']].drop_duplicates()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/main.py:124  ->  'Lotdescr'  |  df_season[df_season['Exporter Clean'] == "Unknown Exporter"][['Lotid', 'Lotdescr']].drop_duplicates()
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/main.py:139  ->  'Exporter Clean'  |  for exp in lot_financial_summary_all_season['Exporter Clean'].unique():
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/main.py:140  ->  'Exporter Clean'  |  exp_fin_sum = lot_financial_summary_all_season[lot_financial_summary_all_season['Exporter Clean'] == exp]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/main.py:144  ->  'Exporter Clean'  |  all_exp_season = [e for e in df_season['Exporter Clean'].unique() if e != "Unknown Exporter"]
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/main.py:152  ->  'Agrolatina_Specific_Charges'  |  excel_sheets_season["Agrolatina_Specific_Charges"] = agrolatina_specific_df
/Users/jp/Documents/Famus 3.0/famus-report-analysis/src/main.py:156  ->  'Retailer_Perf_AllTime'  |  excel_sheets_season["Retailer_Perf_AllTime"] = retailer_perf_all_seasons_df_excel

Total de accesos encontrados: 332
